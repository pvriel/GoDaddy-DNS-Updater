image: python:latest

stages:
  - test
  - publish

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# https://pip.pypa.io/en/stable/topics/caching/
cache:
  paths:
    - .cache/pip

.prepare_python_env:
  before_script:
    - python --version ; pip --version  # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - export VERSION=$(date +%Y%m%d%H%M%S)
    - echo $VERSION


test_syntax:
  extends: [ .prepare_python_env ]
  stage: test
  script:
    - pip install .
    - python3 -m py_compile ./**/*.py

publish_python_package_to_registry:
    extends: [ .prepare_python_env ]
    stage: publish
    script:
        - pip install build twine
        - python -m build
        - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
    only:
        refs:
            - master

publish_docker_image_to_registry:
  image: docker
  stage: publish
  services:
    - name: docker:dind
      alias: thedockerhost
  variables:
      DOCKER_HOST: tcp://thedockerhost:2375/
      DOCKER_DRIVER: overlay2
      DOCKER_TLS_CERTDIR: ""
  script:
    - export IMAGE_TAG=$CI_REGISTRY_IMAGE:$(date +%Y%m%d%H%M%S)
    - echo $IMAGE_TAG
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --compress -t $CI_REGISTRY_IMAGE:latest -t $IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE --all-tags

  only:
    - master

